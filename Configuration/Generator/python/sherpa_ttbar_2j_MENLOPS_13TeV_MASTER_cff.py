import FWCore.ParameterSet.Config as cms
import os

source = cms.Source("EmptySource")

generator = cms.EDFilter("SherpaGeneratorFilter",
  maxEventsToPrint = cms.int32(0),
  filterEfficiency = cms.untracked.double(1.0),
  crossSection = cms.untracked.double(-1),
  SherpaProcess = cms.string('ttbar_2j_MENLOPS_13TeV'),
  SherpackLocation = cms.string('/cvmfs/cms.cern.ch/phys_generator/gridpacks/slc6_amd64_gcc630/13TeV/sherpa/2.2.5'),
  SherpackChecksum = cms.string('b685a16cd381e355eabf403b0e13169b'),
  FetchSherpack = cms.bool(True),
  SherpaPath = cms.string('./'),
  SherpaPathPiece = cms.string('./'),
  SherpaResultDir = cms.string('Result'),
  SherpaDefaultWeight = cms.double(1.0),
  SherpaWeightsBlock = cms.PSet(
    SherpaWeights = cms.vstring(
      'Weight',
      'MEWeight',
      'WeightNormalisation',
      'NTrials'
    ),
    SherpaVariationWeights = cms.vstring(
      'MUR0.707106781187_MUF0.707106781187_PDF260000',
      'MUR0.707106781187_MUF1_PDF260000',
      'MUR1_MUF0.707106781187_PDF260000',
      'MUR1_MUF1_PDF260000',
      'MUR1_MUF1.41421356237_PDF260000',
      'MUR1.41421356237_MUF1_PDF260000',
      'MUR1.41421356237_MUF1.41421356237_PDF260000'
    )
  ),
  SherpaParameters = cms.PSet(parameterSets = cms.vstring(
                             "MPI_Cross_Sections",
                             "Run"),
                              MPI_Cross_Sections = cms.vstring(
				" MPIs in Sherpa, Model = Amisic:",
				" semihard xsec = 2.0061e+06 mb,",
				" non-diffractive xsec = 17.0318 mb with nd factor = 0.3142."
                                                  ),
                              Run = cms.vstring(
				" (run){",
				" FSF:=1.; RSF:=1.; QSF:=1.;",
				" CORE_SCALE TTBar;",
				" EXCLUSIVE_CLUSTER_MODE 1;",
				" METS_BBAR_MODE 5;",
				" NJET:=2; LJET:=2; QCUT:=20.;",
				" ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN;",
				" OL_PREFIX={0} ".format(os.environ['CMS_OPENLOOPS_PREFIX']),
				" LOOPGEN:=OpenLoops;",
				" MI_HANDLER=Amisic;",
				" NLO_SMEAR_THRESHOLD 1;",
				" NLO_SMEAR_POWER 2;",
				" HARD_DECAYS On; HARD_SPIN_CORRELATIONS 1;",
				" HEPMC_USE_NAMED_WEIGHTS 1;",
				" SCALE_VARIATIONS 0.5,0.5 0.5,1. 1.,0.5 1.,1. 1.,2. 2.,1. 2.,2.;",
				" PDF_LIBRARY LHAPDFSherpa;",
				" PDF_SET NNPDF30_nlo_as_0118;",
				" USE_PDF_ALPHAS=1;",
				" BEAM_1=2212;",
				" BEAM_2=2212;",
				" BEAM_ENERGY_1=6500;",
				" BEAM_ENERGY_2=6500;",
				" MAX_PROPER_LIFETIME=10.0;",
				" HEPMC_TREE_LIKE=1;",
				" PRETTY_PRINT=Off;",
				" MASS[6]=172.5;",
				" STABLE[6]=0;",
				" WIDTH[6]=0;",
				" MASS[15]=1.777;",
				" WIDTH[15]=2.26735e-12;",
				" MASS[23]=91.1876;",
				" WIDTH[23]=0;",
				" MASS[24]=80.399;",
				" STABLE[24]=0;",
				" WIDTH[24]=0;",
				" SIN2THETAW=0.23113;",
				" HDH_WIDTH[6,24,5]=1.32;",
				" HDH_WIDTH[-6,-24,-5]=1.32;",
				" HDH_WIDTH[25,5,-5]=2.35e-3;",
				" HDH_WIDTH[25,15,-15]=2.57e-4;",
				" HDH_WIDTH[25,13,-13]=8.91e-7;",
				" HDH_WIDTH[25,4,-4]=1.18e-4;",
				" HDH_WIDTH[25,3,-3]=1.00e-6;",
				" HDH_WIDTH[25,21,21]=3.49e-4;",
				" HDH_WIDTH[25,22,22]=9.28e-6;",
				" HDH_WIDTH[24,2,-1]=0.7041;",
				" HDH_WIDTH[24,4,-3]=0.7041;",
				" HDH_WIDTH[24,12,-11]=0.2256;",
				" HDH_WIDTH[24,16,-15]=0.2256;",
				" HDH_WIDTH[-24,-2,1]=0.7041;",
				" HDH_WIDTH[-24,-4,3]=0.7041;",
				" HDH_WIDTH[-24,-12,11]=0.2256;",
				" HDH_WIDTH[-24,-14,13]=0.2256;",
				" HDH_WIDTH[-24,-16,15]=0.2256;",
				" HDH_WIDTH[23,1,-1]=0.3828;",
				" HDH_WIDTH[23,2,-2]=0.2980;",
				" HDH_WIDTH[23,3,-3]=0.3828;",
				" HDH_WIDTH[23,4,-4]=0.2980;",
				" HDH_WIDTH[23,5,-5]=0.3828;",
				" HDH_WIDTH[23,11,-11]=0.0840;",
				" HDH_WIDTH[23,12,-12]=0.1663;",
				" HDH_WIDTH[23,13,-13]=0.0840;",
				" HDH_WIDTH[23,14,-14]=0.1663;",
				" HDH_WIDTH[23,15,-15]=0.0840;",
				" HDH_WIDTH[23,16,-16]=0.1663;",
				" OL_PARAMETERS=preset=2;",
				" OL_PARAMETERS=write_parameters=1;",
				"}(run)",
				" (processes){",
				" Process : 93 93 -> 6 -6 93{NJET};",
				" Order (*,0); CKKW sqr(QCUT/E_CMS);",
				" NLO_QCD_Mode MC@NLO {LJET};",
				" ME_Generator Amegic {LJET};",
				" RS_ME_Generator Comix {LJET};",
				" Loop_Generator LOOPGEN {LJET};",
				" Max_N_Quarks 6 {5,6,7,8};",
				" Integration_Error 0.05 {5,6,7,8};",
				" End process;",
				"}(processes)"
                                                  ),
                             )
)

ProductionFilterSequence = cms.Sequence(generator)


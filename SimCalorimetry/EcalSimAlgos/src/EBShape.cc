#include <cmath>

#include "SimCalorimetry/EcalSimAlgos/interface/EBShape.h"



void
EBShape::fillShape( float &time_interval, double &m_thresh, EcalShapeBase::DVec& aVec, const edm::EventSetup* es) const
{
    if(m_useDBShape) 
    {
        if(es == nullptr)
        {
	    throw cms::Exception("EcalShapeBase:: DB conditions are not available, const edm::EventSetup* es == nullptr ");
	}
	edm::ESHandle<EcalSimPulseShape> esps;
	es->get<EcalSimPulseShapeRcd>().get(esps);

	aVec = esps->barrel_shape; 
	time_interval = esps->time_interval;
	m_thresh = esps->barrel_thresh;

    } else   // use old hardcoded arrays
    {
        time_interval = 1.0; 
     	aVec.push_back(6.94068e-05); 
        aVec.push_back(-5.03304e-05); 
        aVec.push_back(-2.13404e-05); 
        aVec.push_back(6.017e-05); 
        aVec.push_back(2.01697e-05); 
        aVec.push_back(0.000114845); 
        aVec.push_back(2.13998e-05); 
        aVec.push_back(2.74476e-05); 
        aVec.push_back(5.2824e-05); 
        aVec.push_back(8.754e-05); 
        aVec.push_back(2.95346e-06); 
        aVec.push_back(-7.58699e-05); 
        aVec.push_back(-2.72224e-05); 
        aVec.push_back(3.10997e-06); 
        aVec.push_back(-3.97771e-05); 
        aVec.push_back(-1.06916e-05); 
        aVec.push_back(-0.000113865); 
        aVec.push_back(6.05044e-05); 
        aVec.push_back(-5.81202e-05); 
        aVec.push_back(-6.58974e-06); 
        aVec.push_back(5.37494e-05); 
        aVec.push_back(-0.000123729); 
        aVec.push_back(7.50938e-06); 
        aVec.push_back(-1.35628e-05); 
        aVec.push_back(8.33725e-05); 
        aVec.push_back(3.19299e-05); 
        aVec.push_back(-3.09232e-05); 
        aVec.push_back(-7.0086e-05); 
        aVec.push_back(1.78937e-06); 
        aVec.push_back(-2.20365e-05); 
        aVec.push_back(7.68054e-05); 
        aVec.push_back(-2.5368e-05); 
        aVec.push_back(5.67291e-06); 
        aVec.push_back(5.87096e-05); 
        aVec.push_back(-2.62771e-06); 
        aVec.push_back(4.31832e-05); 
        aVec.push_back(8.33616e-06); 
        aVec.push_back(7.27813e-05); 
        aVec.push_back(7.6159e-05); 
        aVec.push_back(-1.60446e-05); 
        aVec.push_back(-4.12127e-06); 
        aVec.push_back(-5.93381e-05); 
        aVec.push_back(1.61444e-05); 
        aVec.push_back(-5.49559e-05); 
        aVec.push_back(5.55254e-05); 
        aVec.push_back(3.32251e-05); 
        aVec.push_back(-3.15897e-05); 
        aVec.push_back(7.86588e-05); 
        aVec.push_back(-2.9704e-05); 
        aVec.push_back(5.66838e-05); 
        aVec.push_back(2.85281e-05); 
        aVec.push_back(-3.02436e-05); 
        aVec.push_back(-4.16265e-05); 
        aVec.push_back(-1.63191e-05); 
        aVec.push_back(6.61193e-05); 
        aVec.push_back(9.23766e-05); 
        aVec.push_back(6.68903e-05); 
        aVec.push_back(-3.20994e-05); 
        aVec.push_back(0.00011082); 
        aVec.push_back(-4.07997e-05); 
        aVec.push_back(-8.29046e-06); 
        aVec.push_back(-7.42197e-05); 
        aVec.push_back(-1.64386e-05); 
        aVec.push_back(1.02508e-05); 
        aVec.push_back(7.10995e-06); 
        aVec.push_back(-5.87486e-05); 
        aVec.push_back(-0.000101201); 
        aVec.push_back(1.62003e-05); 
        aVec.push_back(-2.53093e-05); 
        aVec.push_back(2.65239e-05); 
        aVec.push_back(-2.68722e-05); 
        aVec.push_back(-4.02001e-05); 
        aVec.push_back(5.0674e-05); 
        aVec.push_back(-1.75884e-05); 
        aVec.push_back(4.7902e-05); 
        aVec.push_back(-1.01079e-05); 
        aVec.push_back(1.08427e-05); 
        aVec.push_back(-0.000112906); 
        aVec.push_back(3.33076e-05); 
        aVec.push_back(0.000181201); 
        aVec.push_back(0.000426875); 
        aVec.push_back(0.00114222); 
        aVec.push_back(0.00237804); 
        aVec.push_back(0.00541858); 
        aVec.push_back(0.0089021); 
        aVec.push_back(0.0149157); 
        aVec.push_back(0.0231397); 
        aVec.push_back(0.0344671); 
        aVec.push_back(0.0471013); 
        aVec.push_back(0.0625517); 
        aVec.push_back(0.0857351); 
        aVec.push_back(0.108561); 
        aVec.push_back(0.133481); 
        aVec.push_back(0.163557); 
        aVec.push_back(0.200243); 
        aVec.push_back(0.225919); 
        aVec.push_back(0.269213); 
        aVec.push_back(0.302929); 
        aVec.push_back(0.342722); 
        aVec.push_back(0.378522); 
        aVec.push_back(0.436563); 
        aVec.push_back(0.467581); 
        aVec.push_back(0.510133); 
        aVec.push_back(0.550063); 
        aVec.push_back(0.583509); 
        aVec.push_back(0.619187); 
        aVec.push_back(0.653245); 
        aVec.push_back(0.686101); 
        aVec.push_back(0.721178); 
        aVec.push_back(0.745129); 
        aVec.push_back(0.774163); 
        aVec.push_back(0.799011); 
        aVec.push_back(0.822177); 
        aVec.push_back(0.838315); 
        aVec.push_back(0.858847); 
        aVec.push_back(0.875559); 
        aVec.push_back(0.891294); 
        aVec.push_back(0.90537); 
        aVec.push_back(0.919617); 
        aVec.push_back(0.930632); 
        aVec.push_back(0.936216); 
        aVec.push_back(0.947739); 
        aVec.push_back(0.955306); 
        aVec.push_back(0.961876); 
        aVec.push_back(0.968124); 
        aVec.push_back(0.97327); 
        aVec.push_back(0.977513); 
        aVec.push_back(0.984885); 
        aVec.push_back(0.986497); 
        aVec.push_back(0.990039); 
        aVec.push_back(0.994798); 
        aVec.push_back(0.994884); 
        aVec.push_back(0.99795); 
        aVec.push_back(0.99834); 
        aVec.push_back(0.999607); 
        aVec.push_back(1); 
        aVec.push_back(0.999047); 
        aVec.push_back(0.998745); 
        aVec.push_back(0.999219); 
        aVec.push_back(0.99814); 
        aVec.push_back(0.995082); 
        aVec.push_back(0.992449); 
        aVec.push_back(0.990418); 
        aVec.push_back(0.985032); 
        aVec.push_back(0.982308); 
        aVec.push_back(0.978696); 
        aVec.push_back(0.975656); 
        aVec.push_back(0.971027); 
        aVec.push_back(0.964811); 
        aVec.push_back(0.959428); 
        aVec.push_back(0.95096); 
        aVec.push_back(0.947428); 
        aVec.push_back(0.9419); 
        aVec.push_back(0.933223); 
        aVec.push_back(0.926482); 
        aVec.push_back(0.922172); 
        aVec.push_back(0.912777); 
        aVec.push_back(0.907388); 
        aVec.push_back(0.897289); 
        aVec.push_back(0.891889); 
        aVec.push_back(0.882056); 
        aVec.push_back(0.873382); 
        aVec.push_back(0.865442); 
        aVec.push_back(0.860032); 
        aVec.push_back(0.85202); 
        aVec.push_back(0.841013); 
        aVec.push_back(0.833802); 
        aVec.push_back(0.825259); 
        aVec.push_back(0.815013); 
        aVec.push_back(0.807465); 
        aVec.push_back(0.799428); 
        aVec.push_back(0.792165); 
        aVec.push_back(0.783088); 
        aVec.push_back(0.773392); 
        aVec.push_back(0.764982); 
        aVec.push_back(0.752174); 
        aVec.push_back(0.746487); 
        aVec.push_back(0.737678); 
        aVec.push_back(0.727396); 
        aVec.push_back(0.718692); 
        aVec.push_back(0.712737); 
        aVec.push_back(0.702738); 
        aVec.push_back(0.69559); 
        aVec.push_back(0.684389); 
        aVec.push_back(0.677989); 
        aVec.push_back(0.667643); 
        aVec.push_back(0.659009); 
        aVec.push_back(0.650217); 
        aVec.push_back(0.644479); 
        aVec.push_back(0.636017); 
        aVec.push_back(0.625257); 
        aVec.push_back(0.618507); 
        aVec.push_back(0.609798); 
        aVec.push_back(0.600097); 
        aVec.push_back(0.592788); 
        aVec.push_back(0.584895); 
        aVec.push_back(0.578228); 
        aVec.push_back(0.569299); 
        aVec.push_back(0.560576); 
        aVec.push_back(0.552404); 
        aVec.push_back(0.541405); 
        aVec.push_back(0.536271); 
        aVec.push_back(0.528734); 
        aVec.push_back(0.519813); 
        aVec.push_back(0.512264); 
        aVec.push_back(0.507001); 
        aVec.push_back(0.49828); 
        aVec.push_back(0.492416); 
        aVec.push_back(0.483181); 
        aVec.push_back(0.477907); 
        aVec.push_back(0.469623); 
        aVec.push_back(0.462528); 
        aVec.push_back(0.455099); 
        aVec.push_back(0.45055); 
        aVec.push_back(0.443576); 
        aVec.push_back(0.435364); 
        aVec.push_back(0.429789); 
        aVec.push_back(0.422724); 
        aVec.push_back(0.415621); 
        aVec.push_back(0.409469); 
        aVec.push_back(0.40401); 
        aVec.push_back(0.398121); 
        aVec.push_back(0.391079); 
        aVec.push_back(0.384414); 
        aVec.push_back(0.378214); 
        aVec.push_back(0.369851); 
        aVec.push_back(0.365966); 
        aVec.push_back(0.359865); 
        aVec.push_back(0.353505); 
        aVec.push_back(0.347899); 
        aVec.push_back(0.343829); 
        aVec.push_back(0.337585); 
        aVec.push_back(0.333089); 
        aVec.push_back(0.326289); 
        aVec.push_back(0.322249); 
        aVec.push_back(0.316079); 
        aVec.push_back(0.31061); 
        aVec.push_back(0.305426); 
        aVec.push_back(0.301885); 
        aVec.push_back(0.296753); 
        aVec.push_back(0.290931); 
        aVec.push_back(0.286877); 
        aVec.push_back(0.281831); 
        aVec.push_back(0.276633); 
        aVec.push_back(0.272283); 
        aVec.push_back(0.268069); 
        aVec.push_back(0.26399); 
        aVec.push_back(0.258457); 
        aVec.push_back(0.253549); 
        aVec.push_back(0.249493); 

	for( unsigned int i ( 250 ) ; i != 500 ; ++i ) aVec.push_back( exp(2.39735 - 0.0151053* ((double)i+1.0)) );
    }
}

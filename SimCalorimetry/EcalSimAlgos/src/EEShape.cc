#include <cmath>

#include "SimCalorimetry/EcalSimAlgos/interface/EEShape.h"

void
EEShape::fillShape(float &time_interval, double &m_thresh, EcalShapeBase::DVec& aVec, const edm::EventSetup* es ) const
{
    
    if(m_useDBShape) 
    {
        if(es == nullptr)
        {
	    throw cms::Exception("EcalShapeBase:: DB conditions are not available, const edm::EventSetup* es == nullptr ");
	}
	edm::ESHandle<EcalSimPulseShape> esps;
	es->get<EcalSimPulseShapeRcd>().get(esps);

	aVec = esps->endcap_shape; 
	time_interval = esps->time_interval;
	m_thresh = esps->endcap_thresh;
    } else
    {
        time_interval = 1.0; 
   	aVec.push_back(9.09091e-05);
   	aVec.push_back(9.96016e-05);
   	aVec.push_back(8.08219e-05);
   	aVec.push_back(0.000119685);
   	aVec.push_back(9.56522e-05);
   	aVec.push_back(0.000143969);
   	aVec.push_back(0.000101639);
   	aVec.push_back(0.000115789);
   	aVec.push_back(8.31461e-05);
   	aVec.push_back(0.000117091);
   	aVec.push_back(0.000141224);
   	aVec.push_back(5.38745e-05);
   	aVec.push_back(0.000158079);
   	aVec.push_back(0.000104906);
   	aVec.push_back(7.91946e-05);
   	aVec.push_back(8e-05);
   	aVec.push_back(0.000119703);
   	aVec.push_back(9.96516e-05);
   	aVec.push_back(8.82591e-05);
   	aVec.push_back(0.000146988);
   	aVec.push_back(0.000120588);
   	aVec.push_back(9.89474e-05);
   	aVec.push_back(0.000116788);
   	aVec.push_back(0.000151292);
   	aVec.push_back(0.000108434);
   	aVec.push_back(0.000108651);
   	aVec.push_back(8.5259e-05);
   	aVec.push_back(0.000146575);
   	aVec.push_back(8.66142e-05);
   	aVec.push_back(0.000103679);
   	aVec.push_back(0.000153307);
   	aVec.push_back(7.80328e-05);
   	aVec.push_back(8.42105e-05);
   	aVec.push_back(0.000114607);
   	aVec.push_back(6.90909e-05);
   	aVec.push_back(9.22449e-05);
   	aVec.push_back(8.92989e-05);
   	aVec.push_back(0.000105677);
   	aVec.push_back(9.58491e-05);
   	aVec.push_back(0.000107383);
   	aVec.push_back(8.85714e-05);
   	aVec.push_back(0.000119703);
   	aVec.push_back(0.000141463);
   	aVec.push_back(0.000122267);
   	aVec.push_back(6.0241e-05);
   	aVec.push_back(0.000120588);
   	aVec.push_back(0.000115789);
   	aVec.push_back(0.000121168);
   	aVec.push_back(8.04428e-05);
   	aVec.push_back(9.39759e-05);
   	aVec.push_back(3.391e-05);
   	aVec.push_back(-7.72908e-05);
   	aVec.push_back(5.61644e-05);
   	aVec.push_back(0.000181102);
   	aVec.push_back(-3.67893e-05);
   	aVec.push_back(6.45914e-05);
   	aVec.push_back(2.68852e-05);
   	aVec.push_back(-1.57895e-05);
   	aVec.push_back(-2.47191e-05);
   	aVec.push_back(-5.30909e-05);
   	aVec.push_back(-1.06122e-05);
   	aVec.push_back(-3.69004e-06);
   	aVec.push_back(5.85153e-05);
   	aVec.push_back(-3.54717e-05);
   	aVec.push_back(-9.39597e-06);
   	aVec.push_back(5e-05);
   	aVec.push_back(-3.19703e-05);
   	aVec.push_back(3.69338e-05);
   	aVec.push_back(-0.000169231);
   	aVec.push_back(-4.09639e-05);
   	aVec.push_back(-1.61765e-05);
   	aVec.push_back(-8.21053e-05);
   	aVec.push_back(6.86131e-05);
   	aVec.push_back(-6.12546e-05);
   	aVec.push_back(-6.50602e-05);
   	aVec.push_back(2.56055e-05);
   	aVec.push_back(-3.90438e-05);
   	aVec.push_back(-5.89041e-05);
   	aVec.push_back(0.000195276);
   	aVec.push_back(-7.29097e-05);
   	aVec.push_back(1.32296e-05);
   	aVec.push_back(3.27869e-06);
   	aVec.push_back(-6.31579e-05);
   	aVec.push_back(-3.37079e-05);
   	aVec.push_back(5.16364e-05);
   	aVec.push_back(-4.97959e-05);
   	aVec.push_back(8.92989e-05);
   	aVec.push_back(0.000561572);
   	aVec.push_back(0.00171698);
   	aVec.push_back(0.0035906);
   	aVec.push_back(0.00742143);
   	aVec.push_back(0.01249);
   	aVec.push_back(0.020922);
   	aVec.push_back(0.030336);
   	aVec.push_back(0.043588);
   	aVec.push_back(0.0593529);
   	aVec.push_back(0.0764947);
   	aVec.push_back(0.0958978);
   	aVec.push_back(0.11567);
   	aVec.push_back(0.137087);
   	aVec.push_back(0.160643);
   	aVec.push_back(0.188973);
   	aVec.push_back(0.218062);
   	aVec.push_back(0.240682);
   	aVec.push_back(0.265773);
   	aVec.push_back(0.293327);
   	aVec.push_back(0.320832);
   	aVec.push_back(0.348689);
   	aVec.push_back(0.374411);
   	aVec.push_back(0.403575);
   	aVec.push_back(0.431147);
   	aVec.push_back(0.458644);
   	aVec.push_back(0.488217);
   	aVec.push_back(0.515254);
   	aVec.push_back(0.53902);
   	aVec.push_back(0.566819);
   	aVec.push_back(0.589752);
   	aVec.push_back(0.615587);
   	aVec.push_back(0.63808);
   	aVec.push_back(0.664137);
   	aVec.push_back(0.687959);
   	aVec.push_back(0.707379);
   	aVec.push_back(0.726826);
   	aVec.push_back(0.747043);
   	aVec.push_back(0.762952);
   	aVec.push_back(0.781342);
   	aVec.push_back(0.799515);
   	aVec.push_back(0.818559);
   	aVec.push_back(0.832301);
   	aVec.push_back(0.846658);
   	aVec.push_back(0.860791);
   	aVec.push_back(0.874009);
   	aVec.push_back(0.886242);
   	aVec.push_back(0.896982);
   	aVec.push_back(0.908713);
   	aVec.push_back(0.9189);
   	aVec.push_back(0.9283);
   	aVec.push_back(0.938453);
   	aVec.push_back(0.945995);
   	aVec.push_back(0.95186);
   	aVec.push_back(0.958876);
   	aVec.push_back(0.963283);
   	aVec.push_back(0.968989);
   	aVec.push_back(0.972846);
   	aVec.push_back(0.977824);
   	aVec.push_back(0.981341);
   	aVec.push_back(0.982743);
   	aVec.push_back(0.984082);
   	aVec.push_back(0.986609);
   	aVec.push_back(0.985925);
   	aVec.push_back(0.984707);
   	aVec.push_back(0.981384);
   	aVec.push_back(0.980941);
   	aVec.push_back(0.980132);
   	aVec.push_back(0.978176);
   	aVec.push_back(0.975987);
   	aVec.push_back(0.973396);
   	aVec.push_back(0.970395);
   	aVec.push_back(0.967422);
   	aVec.push_back(0.96346);
   	aVec.push_back(0.959622);
   	aVec.push_back(0.955396);
   	aVec.push_back(0.950846);
   	aVec.push_back(0.945995);
   	aVec.push_back(0.940835);
   	aVec.push_back(0.935373);
   	aVec.push_back(0.929544);
   	aVec.push_back(0.923836);
   	aVec.push_back(0.91787);
   	aVec.push_back(0.910812);
   	aVec.push_back(0.903924);
   	aVec.push_back(0.897669);
   	aVec.push_back(0.89127);
   	aVec.push_back(0.884613);
   	aVec.push_back(0.878051);
   	aVec.push_back(0.867734);
   	aVec.push_back(0.856756);
   	aVec.push_back(0.848477);
   	aVec.push_back(0.842189);
   	aVec.push_back(0.833787);
   	aVec.push_back(0.825903);
   	aVec.push_back(0.817931);
   	aVec.push_back(0.8102);
   	aVec.push_back(0.802771);
   	aVec.push_back(0.79388);
   	aVec.push_back(0.785348);
   	aVec.push_back(0.777295);
   	aVec.push_back(0.767854);
   	aVec.push_back(0.759619);
   	aVec.push_back(0.752358);
   	aVec.push_back(0.743394);
   	aVec.push_back(0.736674);
   	aVec.push_back(0.726982);
   	aVec.push_back(0.719321);
   	aVec.push_back(0.708937);
   	aVec.push_back(0.700003);
   	aVec.push_back(0.693202);
   	aVec.push_back(0.685961);
   	aVec.push_back(0.676889);
   	aVec.push_back(0.670513);
   	aVec.push_back(0.658788);
   	aVec.push_back(0.648343);
   	aVec.push_back(0.639381);
   	aVec.push_back(0.632761);
   	aVec.push_back(0.623614);
   	aVec.push_back(0.616164);
   	aVec.push_back(0.607884);
   	aVec.push_back(0.601437);
   	aVec.push_back(0.593944);
   	aVec.push_back(0.585817);
   	aVec.push_back(0.577248);
   	aVec.push_back(0.570328);
   	aVec.push_back(0.56147);
   	aVec.push_back(0.553509);
   	aVec.push_back(0.548765);
   	aVec.push_back(0.539964);
   	aVec.push_back(0.53343);
   	aVec.push_back(0.525787);
   	aVec.push_back(0.519868);
   	aVec.push_back(0.510817);
   	aVec.push_back(0.503274);
   	aVec.push_back(0.498478);
   	aVec.push_back(0.493058);
   	aVec.push_back(0.484176);
   	aVec.push_back(0.479896);
   	aVec.push_back(0.469998);
   	aVec.push_back(0.462893);
   	aVec.push_back(0.45576);
   	aVec.push_back(0.450375);
   	aVec.push_back(0.442683);
   	aVec.push_back(0.437887);
   	aVec.push_back(0.430736);
   	aVec.push_back(0.427216);
   	aVec.push_back(0.420775);
   	aVec.push_back(0.41485);
   	aVec.push_back(0.407769);
   	aVec.push_back(0.403546);
   	aVec.push_back(0.397028);
   	aVec.push_back(0.389534);
   	aVec.push_back(0.388569);
   	aVec.push_back(0.380296);
   	aVec.push_back(0.375312);
   	aVec.push_back(0.369457);
   	aVec.push_back(0.365884);
   	aVec.push_back(0.358889);
   	aVec.push_back(0.353344);
   	aVec.push_back(0.350364);
   	aVec.push_back(0.347136);
   	aVec.push_back(0.33872);
   	aVec.push_back(0.336706);

	for( unsigned int i ( 250 ) ; i != 500 ; ++i ) aVec.push_back( exp(2.63163e-01 - 1.37795e-02*(i - 151.0))  );
    }
}
